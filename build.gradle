plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	//querydsl 추가
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	// JPA, 스프링 데이터 JPA 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.2'
	// mariadb 데이터베이스 추가
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4'
//	// QueryDSL 라이브러리
//	implementation 'com.querydsl:querydsl-core'
//	// QueryDSL
//	implementation 'com.querydsl:querydsl-jpa:5.0.0'
//	// QueryDSL 관련된 쿼리 타입(QClass) 생성시 필요한 라이브러리
//	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
//			// java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 시 추가
//	annotationProcessor 'javax.persistence:javax.persistence-api'
//			// java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 시 추가
//	annotationProcessor 'javax.annotation:javax.annotation-api'
	// lombok 사용
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 추가시 자동 생성된 QClass를 gradle clean으로 제거
//clean {
//	// QClass가 생성되는 위치
//	delete file('src/main/generated')
//}